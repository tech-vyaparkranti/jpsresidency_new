{"version":3,"file":"filter-by.js","mappings":"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","sources":["webpack://wp-hotel-booking/./assets/js/frontend/filter-by.js"],"sourcesContent":["const getParam = (param) => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n\n    return urlParams.get(param);\n}\n\nconst hbPriceSlider = () => {\n    const priceFields = document.querySelectorAll('.hb-price-field');\n    if (!priceFields) {\n        return;\n    }\n\n    for (let i = 0; i < priceFields.length; i++) {\n        const priceField = priceFields[i];\n        const minPrice = priceField.getAttribute('data-min');\n        const maxPrice = priceField.getAttribute('data-max');\n        let step = priceField.getAttribute('data-step');\n\n        if (minPrice === '' || maxPrice === '' || step === '') {\n            continue;\n        }\n\n        const minPriceNode = priceField.querySelector('.hb-min-price');\n        const maxPriceNode = priceField.querySelector('.hb-max-price');\n\n\n        const priceSliderNode = priceField.querySelector('.hb-price-range');\n\n\n        const start = getParam('min_price') || minPrice;\n        const end = getParam('max_price') || maxPrice;\n\n        step = parseInt(step);\n\n        noUiSlider.create(priceSliderNode, {\n            start: [parseInt(start), parseInt(end)],\n            connect: true,\n            step,\n            tooltips: false,\n            range: {\n                min: parseInt(minPrice), max: parseInt(maxPrice),\n            },\n            // direction: 'lt',\n        });\n\n        priceSliderNode.noUiSlider.on('update', function (values, handle, unencoded) {\n            minPriceNode.value = parseInt(values[0]);\n            maxPriceNode.value = parseInt(values[1]);\n            priceField.querySelector('.min').innerHTML = renderPrice(values[0]);\n            priceField.querySelector('.max').innerHTML = renderPrice(values[1]);\n        });\n\n        const applyBtn = priceField.querySelector('button.apply');\n\n        //apply btn click event\n        applyBtn.addEventListener('click', function (event) {\n            event.preventDefault();\n\n            const minPrice = minPriceNode.value;\n            const maxPrice = maxPriceNode.value;\n\n            const url = new URL(window.location.href);\n            url.searchParams.set('min_price', parseInt(minPrice));\n            url.searchParams.set('max_price', parseInt(maxPrice));\n            window.location.href = url;\n        });\n    }\n}\n\nconst hbRating = () => {\n    const ratingFields = document.querySelectorAll('.hb-rating-field');\n    if (!ratingFields) {\n        return;\n    }\n\n    for (let i = 0; i < ratingFields.length; i++) {\n        const ratingField = ratingFields[i];\n\n        const allInputs = ratingField.querySelectorAll('input[type=\"checkbox\"]');\n\n        let rating = [];\n        if (getParam('rating')) {\n            rating = getParam('rating').split(',');\n        }\n\n        [...rating].map(value => {\n            ratingField.querySelector(`input[name =\"rating\"][value =\"${value}\"]`).checked = true;\n        });\n\n        for (let i = 0; i < allInputs.length; i++) {\n            const input = allInputs[i];\n\n            input.addEventListener('change', function (event) {\n                const allCheckedInput = ratingField.querySelectorAll('input[type=\"checkbox\"]:checked');\n\n                let value = [];\n                [...allCheckedInput].map(checkedInput => {\n                    value.push(checkedInput.value);\n                });\n\n                const url = new URL(window.location.href);\n                if (value.length) {\n                    url.searchParams.set('rating', value);\n                } else {\n                    url.searchParams.delete('rating');\n                }\n\n                window.location.href = url;\n            });\n        }\n    }\n}\n\nconst hbRoomType = () => {\n    const roomTypeFields = document.querySelectorAll('.hb-type-field');\n    if (!roomTypeFields) {\n        return;\n    }\n\n    for (let i = 0; i < roomTypeFields.length; i++) {\n        const roomTypeField = roomTypeFields[i];\n\n        const allInputs = roomTypeField.querySelectorAll('input[type=\"checkbox\"]');\n\n        let roomTypesValue = [];\n        if (getParam('room_type')) {\n            roomTypesValue = getParam('room_type').split(',');\n        }\n\n        [...roomTypesValue].map(value => {\n            roomTypeField.querySelector(`input[name =\"room_type\"][value =\"${value}\"]`).checked = true;\n        });\n\n        for (let i = 0; i < allInputs.length; i++) {\n            const input = allInputs[i];\n\n            input.addEventListener('change', function (event) {\n                const allCheckedInput = roomTypeField.querySelectorAll('input[type=\"checkbox\"]:checked');\n\n                let value = [];\n                [...allCheckedInput].map(checkedInput => {\n                    value.push(checkedInput.value);\n                });\n\n                const url = new URL(window.location.href);\n\n                if (value.length) {\n                    url.searchParams.set('room_type', value);\n                } else {\n                    url.searchParams.delete('room_type', value);\n                }\n\n                window.location.href = url;\n            });\n        }\n    }\n}\n\nconst clearFieldFilter = () => {\n    const filterForms = document.querySelectorAll('.search-filter-form');\n    if (!filterForms) {\n        return;\n    }\n\n    for (let i = 0; i < filterForms.length; i++) {\n        const filterForm = filterForms[i];\n        const clearFilterBtn = filterForm.querySelector('.clear-filter button');\n\n        if (!clearFilterBtn) {\n            return;\n        }\n\n        clearFilterBtn.addEventListener('click', function () {\n            const url = new URL(window.location.href);\n\n            const filterArgs = ['min_price', 'max_price', 'rating', 'room_type'];\n\n            [...filterArgs].map(filterArg => {\n                if (url.searchParams.get(filterArg)) {\n                    url.searchParams.delete(filterArg);\n                }\n            });\n\n            window.location.href = url;\n        });\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (hotel_settings && hotel_settings.is_page_search) {\n        return;\n    }\n\n    hbPriceSlider();\n    hbRating();\n    hbRoomType();\n    clearFieldFilter();\n});\n"],"names":["getParam","param","queryString","window","location","search","urlParams","URLSearchParams","get","hbPriceSlider","priceFields","document","querySelectorAll","i","length","priceField","minPrice","getAttribute","maxPrice","step","minPriceNode","querySelector","maxPriceNode","priceSliderNode","start","end","parseInt","noUiSlider","create","connect","tooltips","range","min","max","on","values","handle","unencoded","value","innerHTML","renderPrice","applyBtn","addEventListener","event","preventDefault","url","URL","href","searchParams","set","hbRating","ratingFields","ratingField","allInputs","rating","split","map","checked","input","allCheckedInput","checkedInput","push","delete","hbRoomType","roomTypeFields","roomTypeField","roomTypesValue","clearFieldFilter","filterForms","filterForm","clearFilterBtn","filterArgs","filterArg","hotel_settings","is_page_search"],"sourceRoot":""}